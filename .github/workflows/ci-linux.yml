name: ci-linux

on:
  push:
  pull_request:
    branches:
      - master
      - dev

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-latest]
        compiler: [gcc, clang]
        build-type: [Release, Debug]
        vectorization: [none, simd-sse, simd-avx, simd-full]

    name: "Build: ${{matrix.os}} • ${{matrix.build-type}} • ${{matrix.compiler}}  • vectorization:[${{matrix.vectorization}}]"
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v2

    - name: Update CMake
      uses: jwlawson/actions-setup-cmake@v1.10

    - name: Configure C/C++ compiler • [${{matrix.compiler}}]
      run: |
        if [ "${{matrix.compiler}}" = "gcc" ]; then
          export CC=gcc
          export CXX=g++
          echo "Choosing GNU/GCC as compiler"
        elif [ "${{matrix.compiler}}" = "clang" ]; then
          export CC=clang
          export CXX=clang++
          echo "Choosing LLVM/Clang as compiler"
        else
          echo "Compiler ${{matrix.compiler}} not supported yet"
        fi

    - name: Configure Vectorization • [${{matrix.vectorization}}]
      run: |
        if [ "${{matrix.vectorization}}" = "none" ]; then
          export SIMD_USE_SSE=OFF
          export SIMD_USE_AVX=OFF
          echo "No vectorization (just use scalar kernels)"
        elif [ "${{matrix.vectorization}}" = "simd-sse" ]; then
          export SIMD_USE_SSE=ON
          echo "Try to use SSE kernels if the CPU has support for this ISA"
        elif [ "${{matrix.vectorization}}" = "simd-avx" ]; then
          export SIMD_USE_AVX=ON
          echo "Try to use AVX kernels if the CPU has support for this ISA"
        elif [ "${{matrix.vectorization}}" = "simd-full" ]; then
          export SIMD_USE_SSE=ON
          export SIMD_USE_AVX=ON
          echo "Try to use both SSE and AVX kernels if the CPU supports both"
        else
          echo "We do not yet support vectorization type [${{matrix.vectorization}}]"
        fi

    - name: Configure CMake
      run: cmake -S . -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build-type}}

    - name: Build C++ Project
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build-type}}

    - name: Running C++ Tests
      run: ctest --test-dir ${{github.workspace}}/build/tests/cpp
