from typing import Optional, Union
from numpy import ndarray

class Vector2:
    def __init__(
        self, *args: Union[float, ndarray], **kwargs: Union[float, ndarray]
    ): ...
    @property
    def x(self) -> float: ...
    @x.setter
    def x(self, value: float) -> None: ...
    @property
    def y(self) -> float: ...
    @y.setter
    def y(self, value: float) -> None: ...
    def __add__(self, rhs: Vector2) -> Vector2: ...
    def __sub__(self, rhs: Vector2) -> Vector2: ...
    def __mul__(self, scale: float) -> Vector2: ...
    def __rmul__(self, scale: float) -> Vector2: ...
    def __eq__(self, other: Vector2) -> bool: ...
    def __getitem__(self, index: int) -> float: ...
    def __setitem__(self, index: int, value: float) -> None: ...
    def __neq__(self, other: Vector2) -> bool: ...
    def dot(self, rhs: Vector2) -> float: ...
    def norm(self) -> float: ...
    def squareNorm(self) -> float: ...
    def normalize(self) -> Vector2: ...
    def normalize_(self) -> None: ...

# Structure should be the same, except for the internal usage of f32 and f64
Vector2f = Vector2
Vector2d = Vector2
